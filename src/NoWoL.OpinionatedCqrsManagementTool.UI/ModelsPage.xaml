<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xxx="clr-namespace:NoWoL.OpinionatedCqrsManagementTool.UI"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:popups="using:NoWoL.OpinionatedCqrsManagementTool.UI.Popups"
             xmlns:models="using:NoWoL.OpinionatedCqrsManagementTool.UI.Models.Maui"
             xmlns:converters="using:NoWoL.OpinionatedCqrsManagementTool.UI.Converters"
             xmlns:controls="using:NoWoL.OpinionatedCqrsManagementTool.UI.Controls"
             xmlns:ui="using:NoWoL.OpinionatedCqrsManagementTool.UI"
             x:Class="NoWoL.OpinionatedCqrsManagementTool.UI.ModelsPage"
             x:DataType="xxx:ModelsPageViewModel"
             Title="Models">

    <ContentPage.Resources>
        <ResourceDictionary>
            <toolkit:IsNotNullConverter x:Key="IsNotNullConverter" />
            <toolkit:IsListNullOrEmptyConverter x:Key="IsListNullOrEmptyConverter" />
        </ResourceDictionary>
        <converters:NullableIntToStringConverter x:Key="NullableIntToString" />
    </ContentPage.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20*" />
            <ColumnDefinition Width="40*" />
            <ColumnDefinition Width="40*" />
        </Grid.ColumnDefinitions>

        <ScrollView WidthRequest="700"
                    HorizontalOptions="Start"
                    Padding="20,0,0,0"
                    Grid.Column="1"
                    IsVisible="{Binding SelectedModel, Converter={StaticResource IsNotNullConverter}}">

            <StackLayout>
                <Label Text="Name" Style="{StaticResource HeaderStyle}" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="200" />
                    </Grid.ColumnDefinitions>
                    <Label Text="{Binding SelectedModel.Name, FallbackValue=''}"
                           VerticalTextAlignment="Center"
                           Grid.Column="0"/>
                    <Button Text="Rename model"
                            Grid.Column="1"
                            Clicked="RenameModel" />
                </Grid>

                <Label Text="Generate Domain" Style="{StaticResource HeaderStyle}" />
                <CheckBox IsChecked="{Binding SelectedModel.Domain.Generate, FallbackValue=false}" />

                <Label Text="Domain Namespace" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                <Entry Placeholder="Enter a domain namespace"
                       Text="{Binding SelectedModel.Domain.Namespace, FallbackValue=''}"
                       IsSpellCheckEnabled="False" />

                <Label Text="Override Domain Name" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                <Entry Placeholder="Enter an overridden domain name"
                       Text="{Binding SelectedModel.Domain.OverriddenName, FallbackValue=''}"
                       IsSpellCheckEnabled="False" />

                <Label Text="Domain Inherits From (optional)" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                <popups:DataTypePicker ItemsSource="{Binding AllModels, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}"
                                       SelectedItem="{Binding SelectedModel.Domain.InheritsFrom, Mode=TwoWay, FallbackValue=null, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}" />
                <StackLayout IsVisible="{Binding SelectedModel.Domain.InheritsFrom, FallbackValue=false, Converter={StaticResource IsNotNullConverter}}">
                    <Label Text="Domain Inherits Generic Parameter" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                    <popups:DataTypePicker x:DataType="models:ModelInfo"
                                           ItemsSource="{Binding AllModels, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}"
                                           SelectedItem="{Binding SelectedModel.Domain.InheritsGeneric, Mode=TwoWay, FallbackValue=null, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}" />
                </StackLayout>

                <Label Text="Generate Service" Style="{StaticResource HeaderStyle}" />
                <CheckBox IsChecked="{Binding SelectedModel.Service.Generate, FallbackValue=false}" />

                <Label Text="Service Namespace" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                <Entry Placeholder="Enter a service namespace"
                       Text="{Binding SelectedModel.Service.Namespace, FallbackValue=''}"
                       IsSpellCheckEnabled="False" IsTextPredictionEnabled="false" />

                <Label Text="Override Service Name" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                <Entry Placeholder="Enter an overridden service name"
                       Text="{Binding SelectedModel.Service.OverriddenName, FallbackValue=''}"
                       IsSpellCheckEnabled="False" />

                <Label Text="Service Converter" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                <Entry Placeholder="Enter a service Converter"
                       Text="{Binding SelectedModel.Service.Converter, FallbackValue=''}"
                       IsSpellCheckEnabled="False" />

                <Label Text="Service Inherits From (optional)" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                <popups:DataTypePicker x:DataType="models:ModelInfo"
                                       ItemsSource="{Binding AllModels, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}"
                                       SelectedItem="{Binding SelectedModel.Service.InheritsFrom, Mode=TwoWay, FallbackValue=null, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}" />
                <StackLayout IsVisible="{Binding SelectedModel.Service.InheritsFrom, FallbackValue=false, Converter={StaticResource IsNotNullConverter}}">
                    <Label Text="Service Inherits Generic Parameter" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                    <popups:DataTypePicker x:DataType="models:ModelInfo"
                                           ItemsSource="{Binding AllModels, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}"
                                           SelectedItem="{Binding SelectedModel.Service.InheritsGeneric, Mode=TwoWay, FallbackValue=null, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}" />
                </StackLayout>
            </StackLayout>
        </ScrollView>

        <ScrollView WidthRequest="700"
                    HorizontalOptions="Start"
                    Padding="20,0,0,0"
                    Grid.Column="2"
                    IsVisible="{Binding SelectedModel, Converter={StaticResource IsNotNullConverter}}">
            <StackLayout>
                <StackLayout IsVisible="{Binding SelectedModel.EnumValues, FallbackValue=null, Converter={StaticResource IsListNullOrEmptyConverter}, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}">
                    <StackLayout>
                        <Label Text="Properties" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                        <Button Text="Add property" Clicked="AddProperty" />

                        <StackLayout Spacing="16" Margin="0,16,0,0"
                        BindableLayout.ItemsSource="{Binding SelectedModel.Properties, FallbackValue=null, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}} }">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate x:DataType="models:ModelPropertyInfo">

                                    <StackLayout Orientation="Horizontal">
                                        <StackLayout>
                                            <Button Text="/\"
                                                Clicked="MovePropertyUp"
                                                BindingContext="{Binding .}" />

                                            <Button Text="x"
                                                Clicked="RemoveProperty"
                                                BindingContext="{Binding .}" />

                                            <Button Text="\/"
                                                Clicked="MovePropertyDown"
                                                BindingContext="{Binding .}" />
                                        </StackLayout>

                                        <Border Stroke="#000000"
                                            StrokeThickness="1"
                                            Margin="20,0,0,0">
                                            <StackLayout Padding="10,10,10,10">
                                                <Label Text="Name" />
                                                <Entry Placeholder="Property name"
                                                   Text="{Binding Name, FallbackValue=''}"
                                                   IsSpellCheckEnabled="False" />

                                                <Label Text="Description" Margin="0,10,0,0" />
                                                <Entry Placeholder="Property description"
                                                   Text="{Binding Description, FallbackValue=''}"
                                                   IsSpellCheckEnabled="False" />

                                                <Label Text="Type" Margin="0,10,0,0" />
                                                <popups:DataTypePicker x:DataType="models:ModelPropertyInfo"
                                                                   ItemsSource="{Binding Models, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}"
                                                                   SelectedItem="{Binding DataType, Mode=TwoWay, FallbackValue=null}" />

                                                <StackLayout Orientation="Horizontal">
                                                    <StackLayout>
                                                        <Label Text="Nullable" />
                                                        <CheckBox IsChecked="{Binding IsNullable, FallbackValue=false}" />
                                                    </StackLayout>
                                                    <StackLayout Margin="20,0,0,0">
                                                        <Label Text="Initialize" />
                                                        <CheckBox IsChecked="{Binding Initialize, FallbackValue=false}" />
                                                    </StackLayout>
                                                    <StackLayout Margin="20,0,0,0">
                                                        <Label Text="List" />
                                                        <CheckBox IsChecked="{Binding IsList, FallbackValue=false}" />
                                                    </StackLayout>
                                                    <StackLayout Margin="20,0,0,0">
                                                        <Label Text="Hide In Logs" />
                                                        <CheckBox IsChecked="{Binding HideInLogs, FallbackValue=false}" />
                                                    </StackLayout>
                                                    <StackLayout Margin="20,0,0,0">
                                                        <Label Text="Max Length" />
                                                        <controls:NumericEntry Placeholder="Max Length" 
                                                                           Keyboard="Numeric"
                                                                           Text="{Binding MaxLength, FallbackValue=null, Converter={StaticResource NullableIntToString}}"
                                                                           IsSpellCheckEnabled="False"/>
                                                    </StackLayout>
                                                </StackLayout>
                                            </StackLayout>
                                        </Border>
                                    </StackLayout>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                    </StackLayout>
                </StackLayout>

                <StackLayout IsVisible="{Binding SelectedModel.Properties, FallbackValue=null, Converter={StaticResource IsListNullOrEmptyConverter}, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}}}">
                    <Label Text="Enum values" Margin="0,10,0,0" Style="{StaticResource HeaderStyle}" />
                    <Button Text="Add enum value" Clicked="AddEnumValue"/>

                    <StackLayout Spacing="16" Margin="0,16,0,0"
                    BindableLayout.ItemsSource="{Binding SelectedModel.EnumValues, FallbackValue=null, Source={RelativeSource AncestorType={x:Type ui:ModelsPageViewModel}} }">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate x:DataType="models:EnumValueModel">

                                <StackLayout Orientation="Horizontal">
                                    <StackLayout>
                                        <Button Text="/\"
                                            Clicked="MoveEnumValueUp"
                                            BindingContext="{Binding .}" />

                                        <Button Text="x"
                                            Clicked="RemoveEnumValue"
                                            BindingContext="{Binding .}" />

                                        <Button Text="\/"
                                            Clicked="MoveEnumValueDown"
                                            BindingContext="{Binding .}" />
                                    </StackLayout>

                                    <Border Stroke="#000000"
                                        StrokeThickness="1"
                                        Margin="20,0,0,0">
                                        <StackLayout Padding="10,10,10,10">
                                            <Label Text="Text" />
                                            <Label Text="{Binding Text}" />

                                            <Label Text="Value (optional)" />
                                            <controls:NumericEntry Placeholder="Value" 
                                                               Keyboard="Numeric"
                                                               Text="{Binding Value, FallbackValue=null, Converter={StaticResource NullableIntToString}}"
                                                               IsSpellCheckEnabled="False"/>
                                        </StackLayout>
                                    </Border>
                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </StackLayout>
                </StackLayout>
            </StackLayout>
        </ScrollView>

        <Border Stroke="#000000"
                StrokeThickness="1"
                Grid.Column="0">
            <ListView ItemsSource="{Binding Models}"
                      SelectedItem="{Binding SelectedModel, Mode=TwoWay}">

                <ListView.Header>
                    <StackLayout>
                        <Entry Text="{Binding SearchTerm}" 
                               ClearButtonVisibility="WhileEditing"
                               IsSpellCheckEnabled="False"/>
                    </StackLayout>
                </ListView.Header>

                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="models:ModelInfo">
                        <TextCell Text="{Binding Name}" />
                    </DataTemplate>
                </ListView.ItemTemplate>

                <ListView.Footer>
                    <StackLayout Orientation="Horizontal" Spacing="20">
                        <Button Text="Remove Model" Clicked="RemoveModel"
                                IsEnabled="{Binding SelectedModel, Converter={StaticResource IsNotNullConverter}}" />
                        <Button Text="Add Model" Clicked="AddModel" />
                    </StackLayout>
                </ListView.Footer>

            </ListView>
        </Border>
    </Grid>

</ContentPage>